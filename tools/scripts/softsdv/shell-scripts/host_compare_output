: # -*-Perl-*-
eval 'exec perl -w "$0" ${1+"$@"}'
    if 0;

#
#  Copyright (C) 2006 Intel Corporation
#  
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

use strict;
use File::Basename;

##
## Compare a workload's output files to reference files stored with the
## workload definition.  Reference files should be in a subdirectory
## of the workload definition files named "output/<benchmark name>"
##

sub Usage() {
    print STDERR "Usage:  host_compare_output <benchmark directory>\n";
    exit(1);
}

if ($#ARGV < 0) {
    Usage();
}

my $bldDir = $ARGV[0];

if (! -d $bldDir) {
    Usage();
}

if (! -d "${bldDir}/softsdv/OUTPUT") {
    print STDERR "$bldDir doesn't look like a SoftSDV workload.  Can't find $bldDir/softsdv/OUTPUT\n";
    exit(1);
}

if (! -f "$bldDir/.workload") {
    print STDERR "Can't find root benchmark directory (.workload file missing)\n";
    exit(1);
}

my $wrkdir=`cat $bldDir/.workload`;
chomp($wrkdir);
my $bmname=basename($wrkdir);
$wrkdir=dirname($wrkdir);

my $refDir="${wrkdir}/output/${bmname}";
if (! -d $refDir) {
    print STDERR "Workload has no reference output (${refDir})\n";
    exit(1);
}

##
## Read the workload config file to get arguments to specdiff
##
my $workloadConfig = "${wrkdir}/${bmname}.config";

## Variables that may be defined in the workload.config file
our $abstol = undef;
our $reltol = undef;

if (-f "$workloadConfig")
{
    no strict "vars";
    print "$workloadConfig\n";
    unless (my $ret = do $workloadConfig) {
        die("Couldn't parse $workloadConfig: $@") if $@;
        die("Couldn't do $workloadConfig: $!")    unless defined $ret;
        die("Couldn't run $workloadConfig")       unless $ret;
    }
}

print "Comparing ${bmname}...\n";

opendir(DIR, "$refDir") or die("Can't read $refDir");
my @files = grep { !/^\./ && -f "$refDir/$_" } readdir(DIR);
closedir(DIR);

for (my $i = 0; $i < $#files; $i++) {
    my $n = $files[$i];

    # Ignore run_sec -- it is just the run length generated by host_execute_benchmark
    if ($n ne "run_sec") {
        print "    $n -- ";
        if (! -f "$bldDir/softsdv/OUTPUT/$n") {
            print "*** Missing ***\n";
        }
        else {
            ##
            ## Pick arguments to specdiff.  The absolute and relative tolerance
            ## arguments may either be found as scalars from the workload .config
            ## file or as a hash, indexed by the file name.
            ##
            my $diffArgs = "";

            if (defined($reltol)) {
                if (defined(%{$reltol})) {
                    if (defined(${$reltol}{$n})) {
                        $diffArgs .= " -r ${$reltol}{$n}";
                    }
                    elsif (defined(${$reltol}{'default'})) {
                        $diffArgs .= " -r ${$reltol}{'default'}";
                    }
                }
                else {
                    $diffArgs .= " -r $reltol";
                }
            }

            if (defined($abstol)) {
                if (defined(%{$abstol})) {
                    if (defined(${$abstol}{$n})) {
                        $diffArgs .= " -a ${$abstol}{$n}";
                    }
                    elsif (defined(${$abstol}{'default'})) {
                        $diffArgs .= " -a ${$abstol}{'default'}";
                    }
                }
                else {
                    $diffArgs .= " -a $abstol";
                }
            }

            my $status = system("specdiff $diffArgs $bldDir/softsdv/OUTPUT/$n $refDir/$n 2>&1 >/dev/null");
            if ($status == 0) {
                print "Ok\n";
            }
            else {
                print "*** Different ***\n";
                system("specdiff $diffArgs $bldDir/softsdv/OUTPUT/$n $refDir/$n");
            }
        }
    }
}
